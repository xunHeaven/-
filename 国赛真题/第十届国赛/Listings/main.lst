C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_c51v956\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include <intrins.h>
   3          #include <iic.h>
   4          #include <onewire.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          sbit TX=P1^0;
   8          sbit RX=P1^1;
   9          sbit C1=P3^5;
  10          sbit C2=P3^4;
  11          sbit R1=P3^3;
  12          sbit R2=P3^2;
  13          
  14          unsigned char code SMG_number[]=
  15                  {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x80,0xc6,
  16                  0xc0,0x86,0x8e,0xbf,0x7f};//数码管段码，0-f和-.
  17          unsigned char code SMG_Dotnumber[]={0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10}; 
  18          //U-0xc1
  19          unsigned char big_mode=1;//1-显示，2-参数
  20          unsigned char xianshi_mode=1;//1-温度，2-距离，3-变更次数
  21          unsigned char canshu_mode=1;//1-温度参数，2-距离参数
  22          unsigned int temper;//温度
  23          unsigned int distance;
  24          unsigned int change_num;//变更次数
  25          unsigned int distance_canshu=35;//0-99
  26          unsigned int temper_canshu=30;//0-99
  27          unsigned int old_distance_canshu=35;
  28          unsigned int old_temper_canshu=30;
  29          unsigned char S12_key=1;//S12按下为0，否则为1
  30          unsigned char S13_key=1;
  31          unsigned char is_1s1=0;//S12按下是否有1s
  32          unsigned char is_1s2=0;//按下S13是否有1s
  33          unsigned char count_s1=0;
  34          unsigned char count_s2=0;
  35          unsigned char is_DAC=1;
  36          unsigned char old_high=0;
  37          unsigned char count_s3=0;
  38          unsigned char is_ms=0;//500ms读取一次
  39          unsigned char command[10]={0};
  40          unsigned char zifushu=0;//接收到的字符串长度
  41          unsigned char is_flag=0;
  42          unsigned char R_dat;
  43          
  44          void HC(unsigned char channel);
  45          void InitSys();
  46          void delay(unsigned int t);
  47          void displaySMG(unsigned char pos,unsigned char value);
  48          void offSMG();
  49          void showSMG();
  50          void run();
  51          void showLED();
  52          void scanKey();
  53          void InitTimer();
  54          void read_Dis();
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 2   

  55          void read_data();
  56          void InitUart();
  57          void sendByte(unsigned char dat);
  58          void sendString(unsigned char *str);
  59          void workUart();
  60          char putchar(char ch);
  61          void main()
  62          {
  63   1              InitSys();
  64   1              InitTimer();
  65   1              InitUart();
  66   1              while(1)
  67   1              {
  68   2                      run();
  69   2                      workUart();
  70   2                      scanKey();
  71   2              }
  72   1      }
  73          void run()
  74          {
  75   1              read_data();
  76   1              //workUart();
  77   1              showSMG();
  78   1              showLED();
  79   1              
  80   1      }
  81          void InitUart()
  82          {
  83   1              SCON = 0x50;            //8位数据,可变波特率
  84   1              AUXR |= 0x01;           //串口1选择定时器2为波特率发生器
  85   1              AUXR |= 0x04;           //定时器时钟1T模式
  86   1              T2L = 0x8F;                     //设置定时初始值
  87   1              T2H = 0xFD;                     //设置定时初始值
  88   1              AUXR |= 0x10;           //定时器2开始计时
  89   1              ES = 1;                         //使能串口1中断
  90   1              EA=1;
  91   1      }
  92          void sendByte(unsigned char dat)
  93          {
  94   1              SBUF=dat;
  95   1              while(TI==0);
  96   1              TI=0;
  97   1      }
  98          void sendString(unsigned char *str)
  99          {
 100   1              while(*str!='\0')
 101   1              {
 102   2                      sendByte(*str++);
 103   2              }
 104   1      }
 105          void ServiceUart() interrupt 4
 106          {
 107   1              /*if(RI==1)
 108   1              {
 109   1                      R_dat=SBUF;
 110   1                      if((count_char<6)&&(is_flag==0))
 111   1                      {
 112   1                              command[count_char]=R_dat;
 113   1                              count_char++;
 114   1                      }
 115   1                      else
 116   1                      {
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 3   

 117   1                              count_char=0;
 118   1                              is_flag=1;
 119   1                      }
 120   1                      
 121   1                      RI=0;
 122   1                      
 123   1              }*/
 124   1              if (RI)                         //检测串口1接收中断
 125   1              {
 126   2                      command[zifushu] = SBUF;
 127   2                      zifushu++;
 128   2                      RI = 0;                 //清除串口1接收中断请求位
 129   2              }
 130   1      }
 131          char putchar(char ch){//重定向
 132   1              sendByte(ch);
 133   1              return ch;
 134   1      }
 135          void workUart()
 136          {
 137   1              /*if(is_flag==1)
 138   1              {
 139   1                      is_flag=0;
 140   1                      printf("ERROR\r\n");
 141   1              }
 142   1              else
 143   1              {
 144   1                      if((command[0]=='S')&&(command[1]=='T')&&(command[2]=='\r')&&(command[3]=='\n'))
 145   1                      {
 146   1                              printf("$%d,%4.2f\r\n",(int)distance,(float)(temper/100));
 147   1                      }
 148   1                      else if((command[0]=='P')&&(command[1]=='A')&&(command[2]=='R')&&(command[3]=='A'))
 149   1                      {
 150   1                              printf("#%d,%d",(int)old_distance_canshu,(int)old_temper_canshu);
 151   1                      }
 152   1                      else
 153   1                      {
 154   1                              printf("ERROR\r\n");
 155   1                      }
 156   1              }*/
 157   1              unsigned char i;
 158   1              if(command[zifushu - 1] == '\n'){
 159   2                      if((command[0] == 'S') && (command[1] == 'T') && (command[2] == '\r') && (command[3] == '\n')){
 160   3                              printf("$%d,%d.%d",(int)(distance),(int)(temper/ 100),(int)(temper% 100));
 161   3                      }else if((command[0] == 'P') && (command[1] == 'A') && (command[2] == 'R') && (command[3] == 'A')){
 162   3                              printf("#%d,%d\r\n",(int)(old_distance_canshu),(int)(old_temper_canshu));
 163   3                      }else{
 164   3                              printf("ERROR\r\n");
 165   3                      }
 166   2                      zifushu = 0;
 167   2                      for(i = 0;i < 10;i++){
 168   3                              command[i] = 0;
 169   3                      }
 170   2              }
 171   1      
 172   1      }
 173          void InitTimer()
 174          {
 175   1              TMOD=0x01;
 176   1              TH0=(65535-50000+1)/256;
 177   1              TL0=(65535-50000+1)%256;
 178   1              TR0=1;
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 4   

 179   1              ET0=1;
 180   1              EA=1;
 181   1      }
 182          void ServiceTimer() interrupt 1
 183          {
 184   1              TH0=(65535-50000+1)/256;
 185   1              TL0=(65535-50000+1)%256;
 186   1              if(S12_key==0)
 187   1              {
 188   2                      count_s1++;
 189   2                      if(count_s1==20)
 190   2                      {
 191   3                              is_1s1=1;
 192   3                              count_s1=0;
 193   3                      }
 194   2              }
 195   1              if(S13_key==0)
 196   1              {
 197   2                      count_s2++;
 198   2                      if(count_s2==20)
 199   2                      {
 200   3                              is_1s2=1;
 201   3                              count_s2=0;
 202   3                      }
 203   2              }
 204   1      /*      if(is_1s1==1)
 205   1              {
 206   1                      count_s1=0;
 207   1              }
 208   1              if(is_1s2==1)
 209   1              {
 210   1                      count_s2=0;
 211   1              }*/
 212   1              count_s3++;
 213   1              if(count_s3==10)
 214   1              {
 215   2                      is_ms=1;
 216   2                      count_s3=0;
 217   2              }
 218   1      }
 219          void HC(unsigned char channel)
 220          {
 221   1              switch(channel)
 222   1              {
 223   2                      case 4:
 224   2                              P2=(P2&0x1f)|0x80;
 225   2                              break;
 226   2                      case 5:
 227   2                              P2=(P2&0x1f)|0xa0;
 228   2                              break;
 229   2                      case 6:
 230   2                              P2=(P2&0x1f)|0xc0;
 231   2                              break;
 232   2                      case 7:
 233   2                              P2=(P2&0x1f)|0xe0;
 234   2                              break;
 235   2              }
 236   1      }
 237          void InitSys()
 238          {
 239   1              HC(5);
 240   1              P0=0x00;
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 5   

 241   1              HC(4);
 242   1              P0=0xff;
 243   1      }
 244          void delay(unsigned int t)
 245          {
 246   1              while(t--);
 247   1      }
 248          void offSMG()
 249          {
 250   1              HC(6);
 251   1              P0=0x00;
 252   1              HC(7);
 253   1              P0=0xff;
 254   1      }
 255          void displaySMG(unsigned char pos,unsigned char value)
 256          {
 257   1              HC(6);
 258   1              P0=0x01<<pos;
 259   1              HC(7);
 260   1              P0=value;
 261   1              delay(500);
 262   1              offSMG();
 263   1      }
 264          void showSMG()
 265          {
 266   1              if(big_mode==1)
 267   1              {
 268   2                      if(xianshi_mode==1)
 269   2                      {
 270   3                              displaySMG(0,SMG_number[12]);
 271   3                              displaySMG(4,SMG_number[temper/1000]);
 272   3                              displaySMG(5,SMG_Dotnumber[(temper%1000)/100]);
 273   3                              displaySMG(6,SMG_number[(temper%100)/10]);
 274   3                              displaySMG(7,SMG_number[temper%10]);
 275   3                      }
 276   2                      else if(xianshi_mode==2)
 277   2                      {
 278   3                              displaySMG(0,0xc7);
 279   3                              displaySMG(6,SMG_number[distance/10]);
 280   3                              displaySMG(7,SMG_number[distance%10]);
 281   3                      }
 282   2                      else if(xianshi_mode==3)
 283   2                      {
 284   3                              displaySMG(0,0xc8);
 285   3                              if(change_num>9999)
 286   3                              {
 287   4                                      displaySMG(3,SMG_number[change_num/10000]);
 288   4                              }
 289   3                              if(change_num>999)
 290   3                              {
 291   4                                      displaySMG(4,SMG_number[(change_num%10000)/1000]);
 292   4                              }
 293   3                              if(change_num>99)
 294   3                              {
 295   4                                      displaySMG(5,SMG_number[(change_num%1000)/100]);
 296   4                              }
 297   3                              if(change_num>9)
 298   3                              {
 299   4                                      displaySMG(6,SMG_number[(change_num%100)/10]);
 300   4                              }
 301   3                              displaySMG(7,SMG_number[change_num%10]);
 302   3                      }
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 6   

 303   2              }
 304   1              else if(big_mode==2)
 305   1              {
 306   2                      displaySMG(0,0x8c);
 307   2                      if(canshu_mode==1)
 308   2                      {
 309   3                              displaySMG(3,SMG_number[1]);
 310   3                              displaySMG(6,SMG_number[temper_canshu/10]);
 311   3                              displaySMG(7,SMG_number[temper_canshu%10]);
 312   3                      }
 313   2                      else if(canshu_mode==2)
 314   2                      {
 315   3                              displaySMG(3,SMG_number[2]);
 316   3                              displaySMG(6,SMG_number[distance_canshu/10]);
 317   3                              displaySMG(7,SMG_number[distance_canshu%10]);
 318   3                      }
 319   2              }
 320   1      }       
 321          void scanKey()
 322          {
 323   1              R1=0;
 324   1              R2=C1=C2=1;
 325   1              if(C1==0)//S12
 326   1              {
 327   2                      delay(100);
 328   2                      if(C1==0)
 329   2                      {
 330   3                              S12_key=0;
 331   3                              while(C1==0)
 332   3                              {
 333   4                                      run();
 334   4                              }
 335   3                              S12_key=1;
 336   3                              count_s1=0;
 337   3                              if(is_1s1==1)
 338   3                              {
 339   4                                      is_1s1=0;
 340   4                                      change_num=0;
 341   4                                      write_AT(0x00,0);
 342   4                                      write_AT(0x01,0);
 343   4                              }
 344   3                              else
 345   3                              {
 346   4                                      is_1s1=0;
 347   4                                      if(big_mode==1)
 348   4                                      {
 349   5                                              if(xianshi_mode==3)
 350   5                                              {
 351   6                                                      xianshi_mode=1;
 352   6                                              }
 353   5                                              else
 354   5                                              {
 355   6                                                      xianshi_mode++;
 356   6                                              }
 357   5                                      }
 358   4                                      else if(big_mode==2)
 359   4                                      {
 360   5                                              if(canshu_mode==1)
 361   5                                              {
 362   6                                                      canshu_mode=2;
 363   6                                              }
 364   5                                              else
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 7   

 365   5                                              {
 366   6                                                      canshu_mode=1;
 367   6                                              }
 368   5                                      }
 369   4                              }
 370   3                      }
 371   2              }
 372   1              if(C2==0)//S16
 373   1              {
 374   2                      delay(100);
 375   2                      if(C2==0)
 376   2                      {
 377   3                              while(C2==0)
 378   3                              {
 379   4                                      run();
 380   4                              }
 381   3                              if(big_mode==2)
 382   3                              {
 383   4                                      if(canshu_mode==1)
 384   4                                      {
 385   5                                              if(temper_canshu<2)
 386   5                                              {
 387   6                                                      temper_canshu=99;
 388   6                                              }
 389   5                                              else
 390   5                                              {
 391   6                                                      temper_canshu-=2;
 392   6                                              }
 393   5                                      }
 394   4                                      else if(canshu_mode==2)
 395   4                                      {
 396   5                                              if(distance_canshu<5)
 397   5                                              {
 398   6                                                      distance_canshu=99;
 399   6                                              }
 400   5                                              else
 401   5                                              {
 402   6                                                      distance_canshu-=5;
 403   6                                              }
 404   5                                      }
 405   4                              }
 406   3                      }
 407   2              }
 408   1              
 409   1              R2=0;
 410   1              R1=C1=C2=1;
 411   1              if(C1==0)//S13
 412   1              {
 413   2                      delay(100);
 414   2                      if(C1==0)
 415   2                      {
 416   3                              S13_key=0;
 417   3                              while(C1==0)
 418   3                              {
 419   4                                      run();
 420   4                              }
 421   3                              S13_key=1;
 422   3                              count_s2=0;
 423   3                              if(is_1s2==1)
 424   3                              {
 425   4                                      is_1s2=0;
 426   4                                      if(is_DAC==0)
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 8   

 427   4                                      {
 428   5                                              is_DAC=1;
 429   5                                      }
 430   4                                      else
 431   4                                      {
 432   5                                              is_DAC=0;
 433   5                                      }
 434   4                              }
 435   3                              else
 436   3                              {
 437   4                                      is_1s2=0;
 438   4                                      if(big_mode==1)
 439   4                                      {
 440   5                                              big_mode=2;
 441   5                                              xianshi_mode=1;
 442   5                                      }
 443   4                                      else if(big_mode==2)
 444   4                                      {
 445   5                                              big_mode=1;
 446   5                                              canshu_mode=1;
 447   5                                              if((old_distance_canshu!=distance_canshu)|(old_temper_canshu!=temper_canshu))
 448   5                                              {
 449   6                                                      unsigned int h_num;
 450   6                                                      unsigned int l_num;
 451   6                                                      unsigned char h_num1;
 452   6                                                      unsigned char l_num1;
 453   6                                                      
 454   6                                                      change_num++;
 455   6                                                      if(change_num>255)
 456   6                                                      {
 457   7                                                              h_num=change_num/256;
 458   7                                                              h_num1=(unsigned char)h_num;
 459   7                                                              if(old_high!=h_num1)
 460   7                                                              {
 461   8                                                                      old_high=h_num1;
 462   8                                                                      write_AT(0x01,old_high);
 463   8                                                              }
 464   7                                                      }
 465   6                                                      l_num=change_num%256;
 466   6                                                      l_num1=(unsigned char)l_num;
 467   6                                                      write_AT(0x00,l_num1);
 468   6                                              }
 469   5                                              old_distance_canshu=distance_canshu;
 470   5                                              old_temper_canshu=temper_canshu;
 471   5                                      }
 472   4                              }
 473   3                      }
 474   2      
 475   2              }
 476   1              if(C2==0)//S17
 477   1              {
 478   2                      delay(100);
 479   2                      if(C2==0)
 480   2                      {
 481   3                              while(C2==0)
 482   3                              {
 483   4                                      run();
 484   4                              }
 485   3                              if(big_mode==2)
 486   3                              {
 487   4                                      if(canshu_mode==1)
 488   4                                      {
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 9   

 489   5                                              if(temper_canshu>97)
 490   5                                              {
 491   6                                                      temper_canshu=0;
 492   6                                              }
 493   5                                              else
 494   5                                              {
 495   6                                                      temper_canshu+=2;
 496   6                                              }
 497   5                                      }
 498   4                                      else if(canshu_mode==2)
 499   4                                      {
 500   5                                              if(distance_canshu>94)
 501   5                                              {
 502   6                                                      distance_canshu=0;
 503   6                                              }
 504   5                                              else
 505   5                                              {
 506   6                                                      distance_canshu+=5;
 507   6                                              }
 508   5                                      }
 509   4                              }
 510   3                      }
 511   2              }
 512   1      }
 513          void read_Dis()
 514          {
 515   1              unsigned char num=10;
 516   1              unsigned int utime;
 517   1              //unsigned dis;
 518   1              TX=0;
 519   1              CL=0xf3;
 520   1              CH=0xff;
 521   1              CR=1;
 522   1              while(num--)
 523   1              {
 524   2                      while(!CF);
 525   2                      TX^=1;
 526   2                      CL=0xf3;
 527   2                      CH=0xff;
 528   2                      CF=0;
 529   2              }
 530   1              CR=0;
 531   1              CL=0;
 532   1              CH=0;
 533   1              CR=1;
 534   1              while(RX&&(!CF));
 535   1              CR=0;
 536   1              if(CF==1)
 537   1              {
 538   2                      CF=0;
 539   2                      distance=99;
 540   2              }
 541   1              else
 542   1              {
 543   2                      utime=(CH*256)+CL;
 544   2                      distance=utime*0.017;
 545   2              }
 546   1      
 547   1      }
 548          void read_data()
 549          {
 550   1              temper=read_temp();
C51 COMPILER V9.56.0.0   MAIN                                                              05/30/2024 23:00:16 PAGE 10  

 551   1              if(is_ms==1)
 552   1              {
 553   2                      read_Dis();
 554   2                      is_ms=0;
 555   2              }
 556   1              if(is_DAC==1)
 557   1              {
 558   2                      if(distance>distance_canshu)
 559   2                      {
 560   3                              write_PCF(204);
 561   3                      }
 562   2                      else
 563   2                      {
 564   3                              write_PCF(102);
 565   3                      }
 566   2              }
 567   1              else
 568   1              {
 569   2                      write_PCF(21);
 570   2              }
 571   1      }
 572          void showLED()
 573          {
 574   1              HC(4);
 575   1              P0=0xff;
 576   1              if(temper>(old_temper_canshu*100))
 577   1              {
 578   2                      P0=0xfe;
 579   2              }
 580   1              if(distance<old_distance_canshu)
 581   1              {
 582   2                      P0=(P0&0xfd);
 583   2              }
 584   1              if(is_DAC==1)
 585   1              {
 586   2                      P0=(P0&0xfb);
 587   2              }
 588   1              delay(500);
 589   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1657    ----
   CONSTANT SIZE    =     55    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
