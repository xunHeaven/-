C51 COMPILER V9.56.0.0   DS18B20TEST1                                                      03/20/2024 23:47:52 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS18B20TEST1
OBJECT MODULE PLACED IN .\Objects\DS18B20Test1.obj
COMPILER INVOKED BY: C:\Keil_c51v956\C51\BIN\C51.EXE DS18B20Test1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\DS18B20Test1.lst) OBJECT(.\Objects\DS18B20Test1.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "onewire.h"
   3          
   4          unsigned char code SMG_NoDot[18] = {0xc0,0xf9,0xa4,
   5                  0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0x88,0x80,0xc6,
   6                  0xc0,0x86,0x8e,0xbf,0x7f};
   7          
   8          unsigned char code SMG_IsDot[10] = {0x40,0x79,0x24,
   9                  0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  10          unsigned int T_data;
  11          void SMG_delay(unsigned int t)
  12          {
  13   1              while(t--);
  14   1      }
  15          void SelectHC138(unsigned char channel)
  16          {
  17   1              switch(channel)
  18   1              {
  19   2                      case 4:
  20   2                              P2=(P2&0x1f)|0x80;
  21   2                              break;
  22   2                      case 5:
  23   2                              P2=(P2&0x1f)|0xa0;
  24   2                              break;
  25   2                      case 6:
  26   2                              P2=(P2&0x1f)|0xc0;
  27   2                              break;
  28   2                      case 7:
  29   2                              P2=(P2&0x1f)|0xe0;
  30   2                              break;
  31   2              }
  32   1      }
  33          
  34          void display_SMG(unsigned char pos,unsigned char value)
  35          {
  36   1              SelectHC138(7);
  37   1              P0=0xff;
  38   1              SelectHC138(6);
  39   1              P0=(0x01<<pos);
  40   1              SelectHC138(7);
  41   1              P0=value;
  42   1      }
  43          
  44          void show_SMG()
  45          {
  46   1              display_SMG(7,SMG_NoDot[T_data%10]);
  47   1              SMG_delay(100);
  48   1              
  49   1              display_SMG(6,SMG_IsDot[(T_data%100)/10]);
  50   1              SMG_delay(100);
  51   1              
  52   1              display_SMG(5,SMG_NoDot[T_data/100]);
  53   1              SMG_delay(100);
  54   1      }
C51 COMPILER V9.56.0.0   DS18B20TEST1                                                      03/20/2024 23:47:52 PAGE 2   

  55          
  56          void delay(unsigned int t)
  57          {
  58   1              while(t--)
  59   1              {
  60   2                      show_SMG();
  61   2              }
  62   1      }
  63          void read_Temp()
  64          {
  65   1              unsigned char LSB,MSB;//存储温度的低8位和高8位
  66   1              
  67   1              init_ds18b20();
  68   1              Write_DS18B20(0xcc);//跳过ROM
  69   1              Write_DS18B20(0x44);//开始转换
  70   1              
  71   1              delay(1000);
  72   1              
  73   1              init_ds18b20();//复位
  74   1              Write_DS18B20(0xcc);//跳过ROM
  75   1              Write_DS18B20(0xbe);//发读数据的指令
  76   1              
  77   1              LSB=Read_DS18B20();//读取寄存器中的第0字节
  78   1              MSB=Read_DS18B20();//读取寄存器中的第1字节
  79   1              init_ds18b20();//复位
  80   1              T_data=0x0000;
  81   1              T_data=MSB;//低8位赋值
  82   1              //T_data=T_data<<8;//左移8位，变成高8位
  83   1              T_data<<=8;
  84   1              T_data=T_data | LSB;//通过或操作，将LSB中的值赋给T_data低8位
  85   1              if((T_data & 0xf800)==0x0000)
  86   1              {
  87   2                      T_data>>=4;//把小数部分移出去
  88   2                      T_data=T_data*10;//扩大10倍,为了消去小数点
  89   2                      T_data=T_data+(LSB & 0x0f)*0.625;//LSB & 0x0f表示要取LSB的低4位
  90   2              }
  91   1      }
  92          
  93          void main(void)
  94          {
  95   1              while(1)
  96   1              {
  97   2                      //T_data=267;
  98   2                      read_Temp();
  99   2                      show_SMG();
 100   2              }
 101   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    397    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
